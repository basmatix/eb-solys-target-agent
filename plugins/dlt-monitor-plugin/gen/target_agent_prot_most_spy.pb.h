// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: target_agent_prot_most_spy.proto

#ifndef PROTOBUF_target_5fagent_5fprot_5fmost_5fspy_2eproto__INCLUDED
#define PROTOBUF_target_5fagent_5fprot_5fmost_5fspy_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace TargetAgent {
namespace Protocol {
namespace MostSpy {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto();
void protobuf_AssignDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto();
void protobuf_ShutdownFile_target_5fagent_5fprot_5fmost_5fspy_2eproto();

class MostSpyApplicationMessage;
class MostSpyVersionInfo;
class MostSpyMostMessage;

enum MostSpyMajorVersion {
    MOST_SPY_MAJOR_VERSION = 1
};
bool MostSpyMajorVersion_IsValid(int value);
const MostSpyMajorVersion MostSpyMajorVersion_MIN = MOST_SPY_MAJOR_VERSION;
const MostSpyMajorVersion MostSpyMajorVersion_MAX = MOST_SPY_MAJOR_VERSION;
const int MostSpyMajorVersion_ARRAYSIZE = MostSpyMajorVersion_MAX + 1;

const ::google::protobuf::EnumDescriptor* MostSpyMajorVersion_descriptor();
inline const ::std::string& MostSpyMajorVersion_Name(MostSpyMajorVersion value) {
    return ::google::protobuf::internal::NameOfEnum(
               MostSpyMajorVersion_descriptor(), value);
}
inline bool MostSpyMajorVersion_Parse(
    const ::std::string& name, MostSpyMajorVersion* value) {
    return ::google::protobuf::internal::ParseNamedEnum<MostSpyMajorVersion>(
               MostSpyMajorVersion_descriptor(), name, value);
}
enum MostSpyMinorVersion {
    MOST_SPY_MINOR_VERSION = 1
};
bool MostSpyMinorVersion_IsValid(int value);
const MostSpyMinorVersion MostSpyMinorVersion_MIN = MOST_SPY_MINOR_VERSION;
const MostSpyMinorVersion MostSpyMinorVersion_MAX = MOST_SPY_MINOR_VERSION;
const int MostSpyMinorVersion_ARRAYSIZE = MostSpyMinorVersion_MAX + 1;

const ::google::protobuf::EnumDescriptor* MostSpyMinorVersion_descriptor();
inline const ::std::string& MostSpyMinorVersion_Name(MostSpyMinorVersion value) {
    return ::google::protobuf::internal::NameOfEnum(
               MostSpyMinorVersion_descriptor(), value);
}
inline bool MostSpyMinorVersion_Parse(
    const ::std::string& name, MostSpyMinorVersion* value) {
    return ::google::protobuf::internal::ParseNamedEnum<MostSpyMinorVersion>(
               MostSpyMinorVersion_descriptor(), name, value);
}
enum MostSpyOpCodes {
    MOST_SPY_OP_MESSAGE_INVALID = 0,
    MOST_SPY_OP_START_COLLECTING = 1,
    MOST_SPY_OP_STOP_COLLECTING = 2,
    MOST_SPY_OP_PROTOCOL_VERSION = 4,
    MOST_SPY_OP_MOST_MESSAGE = 5,
    MOST_SPY_OP_MOST_AVAILABILITY_CHANGED = 6
};
bool MostSpyOpCodes_IsValid(int value);
const MostSpyOpCodes MostSpyOpCodes_MIN = MOST_SPY_OP_MESSAGE_INVALID;
const MostSpyOpCodes MostSpyOpCodes_MAX = MOST_SPY_OP_MOST_AVAILABILITY_CHANGED;
const int MostSpyOpCodes_ARRAYSIZE = MostSpyOpCodes_MAX + 1;

const ::google::protobuf::EnumDescriptor* MostSpyOpCodes_descriptor();
inline const ::std::string& MostSpyOpCodes_Name(MostSpyOpCodes value) {
    return ::google::protobuf::internal::NameOfEnum(
               MostSpyOpCodes_descriptor(), value);
}
inline bool MostSpyOpCodes_Parse(
    const ::std::string& name, MostSpyOpCodes* value) {
    return ::google::protobuf::internal::ParseNamedEnum<MostSpyOpCodes>(
               MostSpyOpCodes_descriptor(), name, value);
}
enum MostSpyCommandErrorCodes {
    MOST_SPY_RESULT_INVALID = 0,
    MOST_SPY_RESULT_SUCCESS = 1,
    MOST_SPY_RESULT_PARAM_WRONG = 2,
    MOST_SPY_RESULT_EXEC_ERROR = 3,
    MOST_SPY_RESULT_PARSE_ERROR = 4,
    MOST_SPY_RESULT_SPECIFIC = 5
};
bool MostSpyCommandErrorCodes_IsValid(int value);
const MostSpyCommandErrorCodes MostSpyCommandErrorCodes_MIN = MOST_SPY_RESULT_INVALID;
const MostSpyCommandErrorCodes MostSpyCommandErrorCodes_MAX = MOST_SPY_RESULT_SPECIFIC;
const int MostSpyCommandErrorCodes_ARRAYSIZE = MostSpyCommandErrorCodes_MAX + 1;

const ::google::protobuf::EnumDescriptor* MostSpyCommandErrorCodes_descriptor();
inline const ::std::string& MostSpyCommandErrorCodes_Name(MostSpyCommandErrorCodes value) {
    return ::google::protobuf::internal::NameOfEnum(
               MostSpyCommandErrorCodes_descriptor(), value);
}
inline bool MostSpyCommandErrorCodes_Parse(
    const ::std::string& name, MostSpyCommandErrorCodes* value) {
    return ::google::protobuf::internal::ParseNamedEnum<MostSpyCommandErrorCodes>(
               MostSpyCommandErrorCodes_descriptor(), name, value);
}
enum MostSpyOpType {
    MOST_SPY_OPTYPE_INVALID = 0,
    MOST_SPY_OPTYPE_REQUEST = 1,
    MOST_SPY_OPTYPE_RESPONSE = 2,
    MOST_SPY_OPTYPE_NOTIFY = 3
};
bool MostSpyOpType_IsValid(int value);
const MostSpyOpType MostSpyOpType_MIN = MOST_SPY_OPTYPE_INVALID;
const MostSpyOpType MostSpyOpType_MAX = MOST_SPY_OPTYPE_NOTIFY;
const int MostSpyOpType_ARRAYSIZE = MostSpyOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MostSpyOpType_descriptor();
inline const ::std::string& MostSpyOpType_Name(MostSpyOpType value) {
    return ::google::protobuf::internal::NameOfEnum(
               MostSpyOpType_descriptor(), value);
}
inline bool MostSpyOpType_Parse(
    const ::std::string& name, MostSpyOpType* value) {
    return ::google::protobuf::internal::ParseNamedEnum<MostSpyOpType>(
               MostSpyOpType_descriptor(), name, value);
}
// ===================================================================

class MostSpyApplicationMessage : public ::google::protobuf::Message {
public:
    MostSpyApplicationMessage();
    virtual ~MostSpyApplicationMessage();

    MostSpyApplicationMessage(const MostSpyApplicationMessage& from);

    inline MostSpyApplicationMessage& operator=(const MostSpyApplicationMessage& from) {
        CopyFrom(from);
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
        return _unknown_fields_;
    }

    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
        return &_unknown_fields_;
    }

    static const ::google::protobuf::Descriptor* descriptor();
    static const MostSpyApplicationMessage& default_instance();

    void Swap(MostSpyApplicationMessage* other);

    // implements Message ----------------------------------------------

    MostSpyApplicationMessage* New() const;
    void CopyFrom(const ::google::protobuf::Message& from);
    void MergeFrom(const ::google::protobuf::Message& from);
    void CopyFrom(const MostSpyApplicationMessage& from);
    void MergeFrom(const MostSpyApplicationMessage& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
    int GetCachedSize() const {
        return _cached_size_;
    }
private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
public:
    ::google::protobuf::Metadata GetMetadata() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // required .TargetAgent.Protocol.MostSpy.MostSpyOpCodes messageID = 1;
    inline bool has_messageid() const;
    inline void clear_messageid();
    static const int kMessageIDFieldNumber = 1;
    inline ::TargetAgent::Protocol::MostSpy::MostSpyOpCodes messageid() const;
    inline void set_messageid(::TargetAgent::Protocol::MostSpy::MostSpyOpCodes value);

    // required .TargetAgent.Protocol.MostSpy.MostSpyOpType operationType = 2;
    inline bool has_operationtype() const;
    inline void clear_operationtype();
    static const int kOperationTypeFieldNumber = 2;
    inline ::TargetAgent::Protocol::MostSpy::MostSpyOpType operationtype() const;
    inline void set_operationtype(::TargetAgent::Protocol::MostSpy::MostSpyOpType value);

    // optional .TargetAgent.Protocol.MostSpy.MostSpyCommandErrorCodes errorCodes = 3;
    inline bool has_errorcodes() const;
    inline void clear_errorcodes();
    static const int kErrorCodesFieldNumber = 3;
    inline ::TargetAgent::Protocol::MostSpy::MostSpyCommandErrorCodes errorcodes() const;
    inline void set_errorcodes(::TargetAgent::Protocol::MostSpy::MostSpyCommandErrorCodes value);

    // optional .TargetAgent.Protocol.MostSpy.MostSpyVersionInfo versionInfo = 4;
    inline bool has_versioninfo() const;
    inline void clear_versioninfo();
    static const int kVersionInfoFieldNumber = 4;
    inline const ::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo& versioninfo() const;
    inline ::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo* mutable_versioninfo();
    inline ::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo* release_versioninfo();
    inline void set_allocated_versioninfo(::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo* versioninfo);

    // optional .TargetAgent.Protocol.MostSpy.MostSpyMostMessage mostMessage = 5;
    inline bool has_mostmessage() const;
    inline void clear_mostmessage();
    static const int kMostMessageFieldNumber = 5;
    inline const ::TargetAgent::Protocol::MostSpy::MostSpyMostMessage& mostmessage() const;
    inline ::TargetAgent::Protocol::MostSpy::MostSpyMostMessage* mutable_mostmessage();
    inline ::TargetAgent::Protocol::MostSpy::MostSpyMostMessage* release_mostmessage();
    inline void set_allocated_mostmessage(::TargetAgent::Protocol::MostSpy::MostSpyMostMessage* mostmessage);

    // @@protoc_insertion_point(class_scope:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage)
private:
    inline void set_has_messageid();
    inline void clear_has_messageid();
    inline void set_has_operationtype();
    inline void clear_has_operationtype();
    inline void set_has_errorcodes();
    inline void clear_has_errorcodes();
    inline void set_has_versioninfo();
    inline void clear_has_versioninfo();
    inline void set_has_mostmessage();
    inline void clear_has_mostmessage();

    ::google::protobuf::UnknownFieldSet _unknown_fields_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    int messageid_;
    int operationtype_;
    ::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo* versioninfo_;
    ::TargetAgent::Protocol::MostSpy::MostSpyMostMessage* mostmessage_;
    int errorcodes_;
    friend void  protobuf_AddDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto();
    friend void protobuf_AssignDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto();
    friend void protobuf_ShutdownFile_target_5fagent_5fprot_5fmost_5fspy_2eproto();

    void InitAsDefaultInstance();
    static MostSpyApplicationMessage* default_instance_;
};
// -------------------------------------------------------------------

class MostSpyVersionInfo : public ::google::protobuf::Message {
public:
    MostSpyVersionInfo();
    virtual ~MostSpyVersionInfo();

    MostSpyVersionInfo(const MostSpyVersionInfo& from);

    inline MostSpyVersionInfo& operator=(const MostSpyVersionInfo& from) {
        CopyFrom(from);
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
        return _unknown_fields_;
    }

    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
        return &_unknown_fields_;
    }

    static const ::google::protobuf::Descriptor* descriptor();
    static const MostSpyVersionInfo& default_instance();

    void Swap(MostSpyVersionInfo* other);

    // implements Message ----------------------------------------------

    MostSpyVersionInfo* New() const;
    void CopyFrom(const ::google::protobuf::Message& from);
    void MergeFrom(const ::google::protobuf::Message& from);
    void CopyFrom(const MostSpyVersionInfo& from);
    void MergeFrom(const MostSpyVersionInfo& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
    int GetCachedSize() const {
        return _cached_size_;
    }
private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
public:
    ::google::protobuf::Metadata GetMetadata() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // required int32 majorVersion = 1;
    inline bool has_majorversion() const;
    inline void clear_majorversion();
    static const int kMajorVersionFieldNumber = 1;
    inline ::google::protobuf::int32 majorversion() const;
    inline void set_majorversion(::google::protobuf::int32 value);

    // required int32 minorVersion = 2;
    inline bool has_minorversion() const;
    inline void clear_minorversion();
    static const int kMinorVersionFieldNumber = 2;
    inline ::google::protobuf::int32 minorversion() const;
    inline void set_minorversion(::google::protobuf::int32 value);

    // @@protoc_insertion_point(class_scope:TargetAgent.Protocol.MostSpy.MostSpyVersionInfo)
private:
    inline void set_has_majorversion();
    inline void clear_has_majorversion();
    inline void set_has_minorversion();
    inline void clear_has_minorversion();

    ::google::protobuf::UnknownFieldSet _unknown_fields_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::int32 majorversion_;
    ::google::protobuf::int32 minorversion_;
    friend void  protobuf_AddDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto();
    friend void protobuf_AssignDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto();
    friend void protobuf_ShutdownFile_target_5fagent_5fprot_5fmost_5fspy_2eproto();

    void InitAsDefaultInstance();
    static MostSpyVersionInfo* default_instance_;
};
// -------------------------------------------------------------------

class MostSpyMostMessage : public ::google::protobuf::Message {
public:
    MostSpyMostMessage();
    virtual ~MostSpyMostMessage();

    MostSpyMostMessage(const MostSpyMostMessage& from);

    inline MostSpyMostMessage& operator=(const MostSpyMostMessage& from) {
        CopyFrom(from);
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
        return _unknown_fields_;
    }

    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
        return &_unknown_fields_;
    }

    static const ::google::protobuf::Descriptor* descriptor();
    static const MostSpyMostMessage& default_instance();

    void Swap(MostSpyMostMessage* other);

    // implements Message ----------------------------------------------

    MostSpyMostMessage* New() const;
    void CopyFrom(const ::google::protobuf::Message& from);
    void MergeFrom(const ::google::protobuf::Message& from);
    void CopyFrom(const MostSpyMostMessage& from);
    void MergeFrom(const MostSpyMostMessage& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
    int GetCachedSize() const {
        return _cached_size_;
    }
private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
public:
    ::google::protobuf::Metadata GetMetadata() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // required uint32 FBlockID = 1;
    inline bool has_fblockid() const;
    inline void clear_fblockid();
    static const int kFBlockIDFieldNumber = 1;
    inline ::google::protobuf::uint32 fblockid() const;
    inline void set_fblockid(::google::protobuf::uint32 value);

    // required uint32 InstID = 2;
    inline bool has_instid() const;
    inline void clear_instid();
    static const int kInstIDFieldNumber = 2;
    inline ::google::protobuf::uint32 instid() const;
    inline void set_instid(::google::protobuf::uint32 value);

    // required uint32 FktID = 3;
    inline bool has_fktid() const;
    inline void clear_fktid();
    static const int kFktIDFieldNumber = 3;
    inline ::google::protobuf::uint32 fktid() const;
    inline void set_fktid(::google::protobuf::uint32 value);

    // required uint32 OPType = 4;
    inline bool has_optype() const;
    inline void clear_optype();
    static const int kOPTypeFieldNumber = 4;
    inline ::google::protobuf::uint32 optype() const;
    inline void set_optype(::google::protobuf::uint32 value);

    // required string payload = 5;
    inline bool has_payload() const;
    inline void clear_payload();
    static const int kPayloadFieldNumber = 5;
    inline const ::std::string& payload() const;
    inline void set_payload(const ::std::string& value);
    inline void set_payload(const char* value);
    inline void set_payload(const char* value, size_t size);
    inline ::std::string* mutable_payload();
    inline ::std::string* release_payload();
    inline void set_allocated_payload(::std::string* payload);

    // optional string timestamp = 6;
    inline bool has_timestamp() const;
    inline void clear_timestamp();
    static const int kTimestampFieldNumber = 6;
    inline const ::std::string& timestamp() const;
    inline void set_timestamp(const ::std::string& value);
    inline void set_timestamp(const char* value);
    inline void set_timestamp(const char* value, size_t size);
    inline ::std::string* mutable_timestamp();
    inline ::std::string* release_timestamp();
    inline void set_allocated_timestamp(::std::string* timestamp);

    // @@protoc_insertion_point(class_scope:TargetAgent.Protocol.MostSpy.MostSpyMostMessage)
private:
    inline void set_has_fblockid();
    inline void clear_has_fblockid();
    inline void set_has_instid();
    inline void clear_has_instid();
    inline void set_has_fktid();
    inline void clear_has_fktid();
    inline void set_has_optype();
    inline void clear_has_optype();
    inline void set_has_payload();
    inline void clear_has_payload();
    inline void set_has_timestamp();
    inline void clear_has_timestamp();

    ::google::protobuf::UnknownFieldSet _unknown_fields_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::uint32 fblockid_;
    ::google::protobuf::uint32 instid_;
    ::google::protobuf::uint32 fktid_;
    ::google::protobuf::uint32 optype_;
    ::std::string* payload_;
    ::std::string* timestamp_;
    friend void  protobuf_AddDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto();
    friend void protobuf_AssignDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto();
    friend void protobuf_ShutdownFile_target_5fagent_5fprot_5fmost_5fspy_2eproto();

    void InitAsDefaultInstance();
    static MostSpyMostMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// MostSpyApplicationMessage

// required .TargetAgent.Protocol.MostSpy.MostSpyOpCodes messageID = 1;
inline bool MostSpyApplicationMessage::has_messageid() const {
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MostSpyApplicationMessage::set_has_messageid() {
    _has_bits_[0] |= 0x00000001u;
}
inline void MostSpyApplicationMessage::clear_has_messageid() {
    _has_bits_[0] &= ~0x00000001u;
}
inline void MostSpyApplicationMessage::clear_messageid() {
    messageid_ = 0;
    clear_has_messageid();
}
inline ::TargetAgent::Protocol::MostSpy::MostSpyOpCodes MostSpyApplicationMessage::messageid() const {
    // @@protoc_insertion_point(field_get:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage.messageID)
    return static_cast< ::TargetAgent::Protocol::MostSpy::MostSpyOpCodes >(messageid_);
}
inline void MostSpyApplicationMessage::set_messageid(::TargetAgent::Protocol::MostSpy::MostSpyOpCodes value) {
    assert(::TargetAgent::Protocol::MostSpy::MostSpyOpCodes_IsValid(value));
    set_has_messageid();
    messageid_ = value;
    // @@protoc_insertion_point(field_set:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage.messageID)
}

// required .TargetAgent.Protocol.MostSpy.MostSpyOpType operationType = 2;
inline bool MostSpyApplicationMessage::has_operationtype() const {
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MostSpyApplicationMessage::set_has_operationtype() {
    _has_bits_[0] |= 0x00000002u;
}
inline void MostSpyApplicationMessage::clear_has_operationtype() {
    _has_bits_[0] &= ~0x00000002u;
}
inline void MostSpyApplicationMessage::clear_operationtype() {
    operationtype_ = 0;
    clear_has_operationtype();
}
inline ::TargetAgent::Protocol::MostSpy::MostSpyOpType MostSpyApplicationMessage::operationtype() const {
    // @@protoc_insertion_point(field_get:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage.operationType)
    return static_cast< ::TargetAgent::Protocol::MostSpy::MostSpyOpType >(operationtype_);
}
inline void MostSpyApplicationMessage::set_operationtype(::TargetAgent::Protocol::MostSpy::MostSpyOpType value) {
    assert(::TargetAgent::Protocol::MostSpy::MostSpyOpType_IsValid(value));
    set_has_operationtype();
    operationtype_ = value;
    // @@protoc_insertion_point(field_set:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage.operationType)
}

// optional .TargetAgent.Protocol.MostSpy.MostSpyCommandErrorCodes errorCodes = 3;
inline bool MostSpyApplicationMessage::has_errorcodes() const {
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MostSpyApplicationMessage::set_has_errorcodes() {
    _has_bits_[0] |= 0x00000004u;
}
inline void MostSpyApplicationMessage::clear_has_errorcodes() {
    _has_bits_[0] &= ~0x00000004u;
}
inline void MostSpyApplicationMessage::clear_errorcodes() {
    errorcodes_ = 0;
    clear_has_errorcodes();
}
inline ::TargetAgent::Protocol::MostSpy::MostSpyCommandErrorCodes MostSpyApplicationMessage::errorcodes() const {
    // @@protoc_insertion_point(field_get:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage.errorCodes)
    return static_cast< ::TargetAgent::Protocol::MostSpy::MostSpyCommandErrorCodes >(errorcodes_);
}
inline void MostSpyApplicationMessage::set_errorcodes(::TargetAgent::Protocol::MostSpy::MostSpyCommandErrorCodes value) {
    assert(::TargetAgent::Protocol::MostSpy::MostSpyCommandErrorCodes_IsValid(value));
    set_has_errorcodes();
    errorcodes_ = value;
    // @@protoc_insertion_point(field_set:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage.errorCodes)
}

// optional .TargetAgent.Protocol.MostSpy.MostSpyVersionInfo versionInfo = 4;
inline bool MostSpyApplicationMessage::has_versioninfo() const {
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MostSpyApplicationMessage::set_has_versioninfo() {
    _has_bits_[0] |= 0x00000008u;
}
inline void MostSpyApplicationMessage::clear_has_versioninfo() {
    _has_bits_[0] &= ~0x00000008u;
}
inline void MostSpyApplicationMessage::clear_versioninfo() {
    if (versioninfo_ != NULL)
        versioninfo_->::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo::Clear();
    clear_has_versioninfo();
}
inline const ::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo& MostSpyApplicationMessage::versioninfo() const {
    // @@protoc_insertion_point(field_get:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage.versionInfo)
    return versioninfo_ != NULL ? *versioninfo_ : *default_instance_->versioninfo_;
}
inline ::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo* MostSpyApplicationMessage::mutable_versioninfo() {
    set_has_versioninfo();
    if (versioninfo_ == NULL)
        versioninfo_ = new ::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo;
    // @@protoc_insertion_point(field_mutable:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage.versionInfo)
    return versioninfo_;
}
inline ::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo* MostSpyApplicationMessage::release_versioninfo() {
    clear_has_versioninfo();
    ::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo* temp = versioninfo_;
    versioninfo_ = NULL;
    return temp;
}
inline void MostSpyApplicationMessage::set_allocated_versioninfo(::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo* versioninfo) {
    delete versioninfo_;
    versioninfo_ = versioninfo;
    if (versioninfo)
    {
        set_has_versioninfo();
    }
    else
    {
        clear_has_versioninfo();
    }
    // @@protoc_insertion_point(field_set_allocated:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage.versionInfo)
}

// optional .TargetAgent.Protocol.MostSpy.MostSpyMostMessage mostMessage = 5;
inline bool MostSpyApplicationMessage::has_mostmessage() const {
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MostSpyApplicationMessage::set_has_mostmessage() {
    _has_bits_[0] |= 0x00000010u;
}
inline void MostSpyApplicationMessage::clear_has_mostmessage() {
    _has_bits_[0] &= ~0x00000010u;
}
inline void MostSpyApplicationMessage::clear_mostmessage() {
    if (mostmessage_ != NULL)
        mostmessage_->::TargetAgent::Protocol::MostSpy::MostSpyMostMessage::Clear();
    clear_has_mostmessage();
}
inline const ::TargetAgent::Protocol::MostSpy::MostSpyMostMessage& MostSpyApplicationMessage::mostmessage() const {
    // @@protoc_insertion_point(field_get:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage.mostMessage)
    return mostmessage_ != NULL ? *mostmessage_ : *default_instance_->mostmessage_;
}
inline ::TargetAgent::Protocol::MostSpy::MostSpyMostMessage* MostSpyApplicationMessage::mutable_mostmessage() {
    set_has_mostmessage();
    if (mostmessage_ == NULL)
        mostmessage_ = new ::TargetAgent::Protocol::MostSpy::MostSpyMostMessage;
    // @@protoc_insertion_point(field_mutable:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage.mostMessage)
    return mostmessage_;
}
inline ::TargetAgent::Protocol::MostSpy::MostSpyMostMessage* MostSpyApplicationMessage::release_mostmessage() {
    clear_has_mostmessage();
    ::TargetAgent::Protocol::MostSpy::MostSpyMostMessage* temp = mostmessage_;
    mostmessage_ = NULL;
    return temp;
}
inline void MostSpyApplicationMessage::set_allocated_mostmessage(::TargetAgent::Protocol::MostSpy::MostSpyMostMessage* mostmessage) {
    delete mostmessage_;
    mostmessage_ = mostmessage;
    if (mostmessage)
    {
        set_has_mostmessage();
    }
    else
    {
        clear_has_mostmessage();
    }
    // @@protoc_insertion_point(field_set_allocated:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage.mostMessage)
}

// -------------------------------------------------------------------

// MostSpyVersionInfo

// required int32 majorVersion = 1;
inline bool MostSpyVersionInfo::has_majorversion() const {
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MostSpyVersionInfo::set_has_majorversion() {
    _has_bits_[0] |= 0x00000001u;
}
inline void MostSpyVersionInfo::clear_has_majorversion() {
    _has_bits_[0] &= ~0x00000001u;
}
inline void MostSpyVersionInfo::clear_majorversion() {
    majorversion_ = 0;
    clear_has_majorversion();
}
inline ::google::protobuf::int32 MostSpyVersionInfo::majorversion() const {
    // @@protoc_insertion_point(field_get:TargetAgent.Protocol.MostSpy.MostSpyVersionInfo.majorVersion)
    return majorversion_;
}
inline void MostSpyVersionInfo::set_majorversion(::google::protobuf::int32 value) {
    set_has_majorversion();
    majorversion_ = value;
    // @@protoc_insertion_point(field_set:TargetAgent.Protocol.MostSpy.MostSpyVersionInfo.majorVersion)
}

// required int32 minorVersion = 2;
inline bool MostSpyVersionInfo::has_minorversion() const {
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MostSpyVersionInfo::set_has_minorversion() {
    _has_bits_[0] |= 0x00000002u;
}
inline void MostSpyVersionInfo::clear_has_minorversion() {
    _has_bits_[0] &= ~0x00000002u;
}
inline void MostSpyVersionInfo::clear_minorversion() {
    minorversion_ = 0;
    clear_has_minorversion();
}
inline ::google::protobuf::int32 MostSpyVersionInfo::minorversion() const {
    // @@protoc_insertion_point(field_get:TargetAgent.Protocol.MostSpy.MostSpyVersionInfo.minorVersion)
    return minorversion_;
}
inline void MostSpyVersionInfo::set_minorversion(::google::protobuf::int32 value) {
    set_has_minorversion();
    minorversion_ = value;
    // @@protoc_insertion_point(field_set:TargetAgent.Protocol.MostSpy.MostSpyVersionInfo.minorVersion)
}

// -------------------------------------------------------------------

// MostSpyMostMessage

// required uint32 FBlockID = 1;
inline bool MostSpyMostMessage::has_fblockid() const {
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MostSpyMostMessage::set_has_fblockid() {
    _has_bits_[0] |= 0x00000001u;
}
inline void MostSpyMostMessage::clear_has_fblockid() {
    _has_bits_[0] &= ~0x00000001u;
}
inline void MostSpyMostMessage::clear_fblockid() {
    fblockid_ = 0u;
    clear_has_fblockid();
}
inline ::google::protobuf::uint32 MostSpyMostMessage::fblockid() const {
    // @@protoc_insertion_point(field_get:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.FBlockID)
    return fblockid_;
}
inline void MostSpyMostMessage::set_fblockid(::google::protobuf::uint32 value) {
    set_has_fblockid();
    fblockid_ = value;
    // @@protoc_insertion_point(field_set:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.FBlockID)
}

// required uint32 InstID = 2;
inline bool MostSpyMostMessage::has_instid() const {
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MostSpyMostMessage::set_has_instid() {
    _has_bits_[0] |= 0x00000002u;
}
inline void MostSpyMostMessage::clear_has_instid() {
    _has_bits_[0] &= ~0x00000002u;
}
inline void MostSpyMostMessage::clear_instid() {
    instid_ = 0u;
    clear_has_instid();
}
inline ::google::protobuf::uint32 MostSpyMostMessage::instid() const {
    // @@protoc_insertion_point(field_get:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.InstID)
    return instid_;
}
inline void MostSpyMostMessage::set_instid(::google::protobuf::uint32 value) {
    set_has_instid();
    instid_ = value;
    // @@protoc_insertion_point(field_set:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.InstID)
}

// required uint32 FktID = 3;
inline bool MostSpyMostMessage::has_fktid() const {
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MostSpyMostMessage::set_has_fktid() {
    _has_bits_[0] |= 0x00000004u;
}
inline void MostSpyMostMessage::clear_has_fktid() {
    _has_bits_[0] &= ~0x00000004u;
}
inline void MostSpyMostMessage::clear_fktid() {
    fktid_ = 0u;
    clear_has_fktid();
}
inline ::google::protobuf::uint32 MostSpyMostMessage::fktid() const {
    // @@protoc_insertion_point(field_get:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.FktID)
    return fktid_;
}
inline void MostSpyMostMessage::set_fktid(::google::protobuf::uint32 value) {
    set_has_fktid();
    fktid_ = value;
    // @@protoc_insertion_point(field_set:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.FktID)
}

// required uint32 OPType = 4;
inline bool MostSpyMostMessage::has_optype() const {
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MostSpyMostMessage::set_has_optype() {
    _has_bits_[0] |= 0x00000008u;
}
inline void MostSpyMostMessage::clear_has_optype() {
    _has_bits_[0] &= ~0x00000008u;
}
inline void MostSpyMostMessage::clear_optype() {
    optype_ = 0u;
    clear_has_optype();
}
inline ::google::protobuf::uint32 MostSpyMostMessage::optype() const {
    // @@protoc_insertion_point(field_get:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.OPType)
    return optype_;
}
inline void MostSpyMostMessage::set_optype(::google::protobuf::uint32 value) {
    set_has_optype();
    optype_ = value;
    // @@protoc_insertion_point(field_set:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.OPType)
}

// required string payload = 5;
inline bool MostSpyMostMessage::has_payload() const {
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MostSpyMostMessage::set_has_payload() {
    _has_bits_[0] |= 0x00000010u;
}
inline void MostSpyMostMessage::clear_has_payload() {
    _has_bits_[0] &= ~0x00000010u;
}
inline void MostSpyMostMessage::clear_payload() {
    if (payload_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        payload_->clear();
    }
    clear_has_payload();
}
inline const ::std::string& MostSpyMostMessage::payload() const {
    // @@protoc_insertion_point(field_get:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.payload)
    return *payload_;
}
inline void MostSpyMostMessage::set_payload(const ::std::string& value) {
    set_has_payload();
    if (payload_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        payload_ = new ::std::string;
    }
    payload_->assign(value);
    // @@protoc_insertion_point(field_set:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.payload)
}
inline void MostSpyMostMessage::set_payload(const char* value) {
    set_has_payload();
    if (payload_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        payload_ = new ::std::string;
    }
    payload_->assign(value);
    // @@protoc_insertion_point(field_set_char:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.payload)
}
inline void MostSpyMostMessage::set_payload(const char* value, size_t size) {
    set_has_payload();
    if (payload_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        payload_ = new ::std::string;
    }
    payload_->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.payload)
}
inline ::std::string* MostSpyMostMessage::mutable_payload() {
    set_has_payload();
    if (payload_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        payload_ = new ::std::string;
    }
    // @@protoc_insertion_point(field_mutable:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.payload)
    return payload_;
}
inline ::std::string* MostSpyMostMessage::release_payload() {
    clear_has_payload();
    if (payload_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        return NULL;
    }
    else
    {
        ::std::string* temp = payload_;
        payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        return temp;
    }
}
inline void MostSpyMostMessage::set_allocated_payload(::std::string* payload) {
    if (payload_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        delete payload_;
    }
    if (payload)
    {
        set_has_payload();
        payload_ = payload;
    }
    else
    {
        clear_has_payload();
        payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    // @@protoc_insertion_point(field_set_allocated:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.payload)
}

// optional string timestamp = 6;
inline bool MostSpyMostMessage::has_timestamp() const {
    return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MostSpyMostMessage::set_has_timestamp() {
    _has_bits_[0] |= 0x00000020u;
}
inline void MostSpyMostMessage::clear_has_timestamp() {
    _has_bits_[0] &= ~0x00000020u;
}
inline void MostSpyMostMessage::clear_timestamp() {
    if (timestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        timestamp_->clear();
    }
    clear_has_timestamp();
}
inline const ::std::string& MostSpyMostMessage::timestamp() const {
    // @@protoc_insertion_point(field_get:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.timestamp)
    return *timestamp_;
}
inline void MostSpyMostMessage::set_timestamp(const ::std::string& value) {
    set_has_timestamp();
    if (timestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        timestamp_ = new ::std::string;
    }
    timestamp_->assign(value);
    // @@protoc_insertion_point(field_set:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.timestamp)
}
inline void MostSpyMostMessage::set_timestamp(const char* value) {
    set_has_timestamp();
    if (timestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        timestamp_ = new ::std::string;
    }
    timestamp_->assign(value);
    // @@protoc_insertion_point(field_set_char:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.timestamp)
}
inline void MostSpyMostMessage::set_timestamp(const char* value, size_t size) {
    set_has_timestamp();
    if (timestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        timestamp_ = new ::std::string;
    }
    timestamp_->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.timestamp)
}
inline ::std::string* MostSpyMostMessage::mutable_timestamp() {
    set_has_timestamp();
    if (timestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        timestamp_ = new ::std::string;
    }
    // @@protoc_insertion_point(field_mutable:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.timestamp)
    return timestamp_;
}
inline ::std::string* MostSpyMostMessage::release_timestamp() {
    clear_has_timestamp();
    if (timestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        return NULL;
    }
    else
    {
        ::std::string* temp = timestamp_;
        timestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        return temp;
    }
}
inline void MostSpyMostMessage::set_allocated_timestamp(::std::string* timestamp) {
    if (timestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        delete timestamp_;
    }
    if (timestamp)
    {
        set_has_timestamp();
        timestamp_ = timestamp;
    }
    else
    {
        clear_has_timestamp();
        timestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    // @@protoc_insertion_point(field_set_allocated:TargetAgent.Protocol.MostSpy.MostSpyMostMessage.timestamp)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MostSpy
}  // namespace Protocol
}  // namespace TargetAgent

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
struct is_proto_enum< ::TargetAgent::Protocol::MostSpy::MostSpyMajorVersion> : ::google::protobuf::internal::true_type {
};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TargetAgent::Protocol::MostSpy::MostSpyMajorVersion>() {
    return ::TargetAgent::Protocol::MostSpy::MostSpyMajorVersion_descriptor();
}
template <>
struct is_proto_enum< ::TargetAgent::Protocol::MostSpy::MostSpyMinorVersion> : ::google::protobuf::internal::true_type {
};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TargetAgent::Protocol::MostSpy::MostSpyMinorVersion>() {
    return ::TargetAgent::Protocol::MostSpy::MostSpyMinorVersion_descriptor();
}
template <>
struct is_proto_enum< ::TargetAgent::Protocol::MostSpy::MostSpyOpCodes> : ::google::protobuf::internal::true_type {
};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TargetAgent::Protocol::MostSpy::MostSpyOpCodes>() {
    return ::TargetAgent::Protocol::MostSpy::MostSpyOpCodes_descriptor();
}
template <>
struct is_proto_enum< ::TargetAgent::Protocol::MostSpy::MostSpyCommandErrorCodes> : ::google::protobuf::internal::true_type {
};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TargetAgent::Protocol::MostSpy::MostSpyCommandErrorCodes>() {
    return ::TargetAgent::Protocol::MostSpy::MostSpyCommandErrorCodes_descriptor();
}
template <>
struct is_proto_enum< ::TargetAgent::Protocol::MostSpy::MostSpyOpType> : ::google::protobuf::internal::true_type {
};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TargetAgent::Protocol::MostSpy::MostSpyOpType>() {
    return ::TargetAgent::Protocol::MostSpy::MostSpyOpType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_target_5fagent_5fprot_5fmost_5fspy_2eproto__INCLUDED
