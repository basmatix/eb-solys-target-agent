// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: target_agent_prot_most_spy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "target_agent_prot_most_spy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace TargetAgent {
namespace Protocol {
namespace MostSpy {

namespace {

const ::google::protobuf::Descriptor* MostSpyApplicationMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
MostSpyApplicationMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* MostSpyVersionInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
MostSpyVersionInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MostSpyMostMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
MostSpyMostMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MostSpyMajorVersion_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MostSpyMinorVersion_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MostSpyOpCodes_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MostSpyCommandErrorCodes_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MostSpyOpType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto() {
    protobuf_AddDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto();
    const ::google::protobuf::FileDescriptor* file =
        ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
            "target_agent_prot_most_spy.proto");
    GOOGLE_CHECK(file != NULL);
    MostSpyApplicationMessage_descriptor_ = file->message_type(0);
    static const int MostSpyApplicationMessage_offsets_[5] = {
                GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyApplicationMessage, messageid_),
                GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyApplicationMessage, operationtype_),
                GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyApplicationMessage, errorcodes_),
                GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyApplicationMessage, versioninfo_),
                GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyApplicationMessage, mostmessage_),
            };
    MostSpyApplicationMessage_reflection_ =
        new ::google::protobuf::internal::GeneratedMessageReflection(
            MostSpyApplicationMessage_descriptor_,
            MostSpyApplicationMessage::default_instance_,
            MostSpyApplicationMessage_offsets_,
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyApplicationMessage, _has_bits_[0]),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyApplicationMessage, _unknown_fields_),
            -1,
            ::google::protobuf::DescriptorPool::generated_pool(),
            ::google::protobuf::MessageFactory::generated_factory(),
            sizeof(MostSpyApplicationMessage));
    MostSpyVersionInfo_descriptor_ = file->message_type(1);
    static const int MostSpyVersionInfo_offsets_[2] = {
                GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyVersionInfo, majorversion_),
                GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyVersionInfo, minorversion_),
            };
    MostSpyVersionInfo_reflection_ =
        new ::google::protobuf::internal::GeneratedMessageReflection(
            MostSpyVersionInfo_descriptor_,
            MostSpyVersionInfo::default_instance_,
            MostSpyVersionInfo_offsets_,
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyVersionInfo, _has_bits_[0]),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyVersionInfo, _unknown_fields_),
            -1,
            ::google::protobuf::DescriptorPool::generated_pool(),
            ::google::protobuf::MessageFactory::generated_factory(),
            sizeof(MostSpyVersionInfo));
    MostSpyMostMessage_descriptor_ = file->message_type(2);
    static const int MostSpyMostMessage_offsets_[6] = {
                GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyMostMessage, fblockid_),
                GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyMostMessage, instid_),
                GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyMostMessage, fktid_),
                GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyMostMessage, optype_),
                GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyMostMessage, payload_),
                GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyMostMessage, timestamp_),
            };
    MostSpyMostMessage_reflection_ =
        new ::google::protobuf::internal::GeneratedMessageReflection(
            MostSpyMostMessage_descriptor_,
            MostSpyMostMessage::default_instance_,
            MostSpyMostMessage_offsets_,
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyMostMessage, _has_bits_[0]),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MostSpyMostMessage, _unknown_fields_),
            -1,
            ::google::protobuf::DescriptorPool::generated_pool(),
            ::google::protobuf::MessageFactory::generated_factory(),
            sizeof(MostSpyMostMessage));
    MostSpyMajorVersion_descriptor_ = file->enum_type(0);
    MostSpyMinorVersion_descriptor_ = file->enum_type(1);
    MostSpyOpCodes_descriptor_ = file->enum_type(2);
    MostSpyCommandErrorCodes_descriptor_ = file->enum_type(3);
    MostSpyOpType_descriptor_ = file->enum_type(4);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
    ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                                       &protobuf_AssignDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
    protobuf_AssignDescriptorsOnce();
    ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        MostSpyApplicationMessage_descriptor_, &MostSpyApplicationMessage::default_instance());
    ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        MostSpyVersionInfo_descriptor_, &MostSpyVersionInfo::default_instance());
    ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        MostSpyMostMessage_descriptor_, &MostSpyMostMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_target_5fagent_5fprot_5fmost_5fspy_2eproto() {
    delete MostSpyApplicationMessage::default_instance_;
    delete MostSpyApplicationMessage_reflection_;
    delete MostSpyVersionInfo::default_instance_;
    delete MostSpyVersionInfo_reflection_;
    delete MostSpyMostMessage::default_instance_;
    delete MostSpyMostMessage_reflection_;
}

void protobuf_AddDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto() {
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

    ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
        "\n target_agent_prot_most_spy.proto\022\034Targ"
        "etAgent.Protocol.MostSpy\"\372\002\n\031MostSpyAppl"
        "icationMessage\022\?\n\tmessageID\030\001 \002(\0162,.Targ"
        "etAgent.Protocol.MostSpy.MostSpyOpCodes\022"
        "B\n\roperationType\030\002 \002(\0162+.TargetAgent.Pro"
        "tocol.MostSpy.MostSpyOpType\022J\n\nerrorCode"
        "s\030\003 \001(\01626.TargetAgent.Protocol.MostSpy.M"
        "ostSpyCommandErrorCodes\022E\n\013versionInfo\030\004"
        " \001(\01320.TargetAgent.Protocol.MostSpy.Most"
        "SpyVersionInfo\022E\n\013mostMessage\030\005 \001(\01320.Ta"
        "rgetAgent.Protocol.MostSpy.MostSpyMostMe"
        "ssage\"@\n\022MostSpyVersionInfo\022\024\n\014majorVers"
        "ion\030\001 \002(\005\022\024\n\014minorVersion\030\002 \002(\005\"y\n\022MostS"
        "pyMostMessage\022\020\n\010FBlockID\030\001 \002(\r\022\016\n\006InstI"
        "D\030\002 \002(\r\022\r\n\005FktID\030\003 \002(\r\022\016\n\006OPType\030\004 \002(\r\022\017"
        "\n\007payload\030\005 \002(\t\022\021\n\ttimestamp\030\006 \001(\t*1\n\023Mo"
        "stSpyMajorVersion\022\032\n\026MOST_SPY_MAJOR_VERS"
        "ION\020\001*1\n\023MostSpyMinorVersion\022\032\n\026MOST_SPY"
        "_MINOR_VERSION\020\001*\337\001\n\016MostSpyOpCodes\022\037\n\033M"
        "OST_SPY_OP_MESSAGE_INVALID\020\000\022 \n\034MOST_SPY"
        "_OP_START_COLLECTING\020\001\022\037\n\033MOST_SPY_OP_ST"
        "OP_COLLECTING\020\002\022 \n\034MOST_SPY_OP_PROTOCOL_"
        "VERSION\020\004\022\034\n\030MOST_SPY_OP_MOST_MESSAGE\020\005\022"
        ")\n%MOST_SPY_OP_MOST_AVAILABILITY_CHANGED"
        "\020\006*\324\001\n\030MostSpyCommandErrorCodes\022\033\n\027MOST_"
        "SPY_RESULT_INVALID\020\000\022\033\n\027MOST_SPY_RESULT_"
        "SUCCESS\020\001\022\037\n\033MOST_SPY_RESULT_PARAM_WRONG"
        "\020\002\022\036\n\032MOST_SPY_RESULT_EXEC_ERROR\020\003\022\037\n\033MO"
        "ST_SPY_RESULT_PARSE_ERROR\020\004\022\034\n\030MOST_SPY_"
        "RESULT_SPECIFIC\020\005*\203\001\n\rMostSpyOpType\022\033\n\027M"
        "OST_SPY_OPTYPE_INVALID\020\000\022\033\n\027MOST_SPY_OPT"
        "YPE_REQUEST\020\001\022\034\n\030MOST_SPY_OPTYPE_RESPONS"
        "E\020\002\022\032\n\026MOST_SPY_OPTYPE_NOTIFY\020\003BF\n;com.e"
        "lektrobit.ebrace.genivi.targetadapter.Mo"
        "stSpy.protobufB\007MostSpy", 1383);
    ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
        "target_agent_prot_most_spy.proto", &protobuf_RegisterTypes);
    MostSpyApplicationMessage::default_instance_ = new MostSpyApplicationMessage();
    MostSpyVersionInfo::default_instance_ = new MostSpyVersionInfo();
    MostSpyMostMessage::default_instance_ = new MostSpyMostMessage();
    MostSpyApplicationMessage::default_instance_->InitAsDefaultInstance();
    MostSpyVersionInfo::default_instance_->InitAsDefaultInstance();
    MostSpyMostMessage::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_target_5fagent_5fprot_5fmost_5fspy_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_target_5fagent_5fprot_5fmost_5fspy_2eproto {
    StaticDescriptorInitializer_target_5fagent_5fprot_5fmost_5fspy_2eproto() {
        protobuf_AddDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto();
    }
}
static_descriptor_initializer_target_5fagent_5fprot_5fmost_5fspy_2eproto_;
const ::google::protobuf::EnumDescriptor* MostSpyMajorVersion_descriptor() {
    protobuf_AssignDescriptorsOnce();
    return MostSpyMajorVersion_descriptor_;
}
bool MostSpyMajorVersion_IsValid(int value) {
    switch(value)
    {
    case 1:
        return true;
    default:
        return false;
    }
}

const ::google::protobuf::EnumDescriptor* MostSpyMinorVersion_descriptor() {
    protobuf_AssignDescriptorsOnce();
    return MostSpyMinorVersion_descriptor_;
}
bool MostSpyMinorVersion_IsValid(int value) {
    switch(value)
    {
    case 1:
        return true;
    default:
        return false;
    }
}

const ::google::protobuf::EnumDescriptor* MostSpyOpCodes_descriptor() {
    protobuf_AssignDescriptorsOnce();
    return MostSpyOpCodes_descriptor_;
}
bool MostSpyOpCodes_IsValid(int value) {
    switch(value)
    {
    case 0:
    case 1:
    case 2:
    case 4:
    case 5:
    case 6:
        return true;
    default:
        return false;
    }
}

const ::google::protobuf::EnumDescriptor* MostSpyCommandErrorCodes_descriptor() {
    protobuf_AssignDescriptorsOnce();
    return MostSpyCommandErrorCodes_descriptor_;
}
bool MostSpyCommandErrorCodes_IsValid(int value) {
    switch(value)
    {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
        return true;
    default:
        return false;
    }
}

const ::google::protobuf::EnumDescriptor* MostSpyOpType_descriptor() {
    protobuf_AssignDescriptorsOnce();
    return MostSpyOpType_descriptor_;
}
bool MostSpyOpType_IsValid(int value) {
    switch(value)
    {
    case 0:
    case 1:
    case 2:
    case 3:
        return true;
    default:
        return false;
    }
}


// ===================================================================

#ifndef _MSC_VER
const int MostSpyApplicationMessage::kMessageIDFieldNumber;
const int MostSpyApplicationMessage::kOperationTypeFieldNumber;
const int MostSpyApplicationMessage::kErrorCodesFieldNumber;
const int MostSpyApplicationMessage::kVersionInfoFieldNumber;
const int MostSpyApplicationMessage::kMostMessageFieldNumber;
#endif  // !_MSC_VER

MostSpyApplicationMessage::MostSpyApplicationMessage()
        : ::google::protobuf::Message() {
    SharedCtor();
    // @@protoc_insertion_point(constructor:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage)
}

void MostSpyApplicationMessage::InitAsDefaultInstance() {
    versioninfo_ = const_cast< ::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo*>(&::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo::default_instance());
    mostmessage_ = const_cast< ::TargetAgent::Protocol::MostSpy::MostSpyMostMessage*>(&::TargetAgent::Protocol::MostSpy::MostSpyMostMessage::default_instance());
}

MostSpyApplicationMessage::MostSpyApplicationMessage(const MostSpyApplicationMessage& from)
        : ::google::protobuf::Message() {
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage)
}

void MostSpyApplicationMessage::SharedCtor() {
    _cached_size_ = 0;
    messageid_ = 0;
    operationtype_ = 0;
    errorcodes_ = 0;
    versioninfo_ = NULL;
    mostmessage_ = NULL;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MostSpyApplicationMessage::~MostSpyApplicationMessage() {
    // @@protoc_insertion_point(destructor:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage)
    SharedDtor();
}

void MostSpyApplicationMessage::SharedDtor() {
    if (this != default_instance_)
    {
        delete versioninfo_;
        delete mostmessage_;
    }
}

void MostSpyApplicationMessage::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MostSpyApplicationMessage::descriptor() {
    protobuf_AssignDescriptorsOnce();
    return MostSpyApplicationMessage_descriptor_;
}

const MostSpyApplicationMessage& MostSpyApplicationMessage::default_instance() {
    if (default_instance_ == NULL)
        protobuf_AddDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto();
    return *default_instance_;
}

MostSpyApplicationMessage* MostSpyApplicationMessage::default_instance_ = NULL;

MostSpyApplicationMessage* MostSpyApplicationMessage::New() const {
    return new MostSpyApplicationMessage;
}

void MostSpyApplicationMessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MostSpyApplicationMessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

    if (_has_bits_[0 / 32] & 31)
    {
        ZR_(messageid_, operationtype_);
        errorcodes_ = 0;
        if (has_versioninfo())
        {
            if (versioninfo_ != NULL)
                versioninfo_->::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo::Clear();
        }
        if (has_mostmessage())
        {
            if (mostmessage_ != NULL)
                mostmessage_->::TargetAgent::Protocol::MostSpy::MostSpyMostMessage::Clear();
        }
    }

#undef OFFSET_OF_FIELD_
#undef ZR_

    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    mutable_unknown_fields()->Clear();
}

bool MostSpyApplicationMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage)
    for (;;)
    {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag))
        {
            // required .TargetAgent.Protocol.MostSpy.MostSpyOpCodes messageID = 1;
        case 1:
            {
                if (tag == 8)
                {
                    int value;
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                             input, &value)));
                    if (::TargetAgent::Protocol::MostSpy::MostSpyOpCodes_IsValid(value))
                    {
                        set_messageid(static_cast< ::TargetAgent::Protocol::MostSpy::MostSpyOpCodes >(value));
                    }
                    else
                    {
                        mutable_unknown_fields()->AddVarint(1, value);
                    }
                }
                else
                {
                    goto handle_unusual;
                }
                if (input->ExpectTag(16))
                    goto parse_operationType;
                break;
            }

            // required .TargetAgent.Protocol.MostSpy.MostSpyOpType operationType = 2;
        case 2:
            {
                if (tag == 16)
                {
parse_operationType:
                    int value;
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                             input, &value)));
                    if (::TargetAgent::Protocol::MostSpy::MostSpyOpType_IsValid(value))
                    {
                        set_operationtype(static_cast< ::TargetAgent::Protocol::MostSpy::MostSpyOpType >(value));
                    }
                    else
                    {
                        mutable_unknown_fields()->AddVarint(2, value);
                    }
                }
                else
                {
                    goto handle_unusual;
                }
                if (input->ExpectTag(24))
                    goto parse_errorCodes;
                break;
            }

            // optional .TargetAgent.Protocol.MostSpy.MostSpyCommandErrorCodes errorCodes = 3;
        case 3:
            {
                if (tag == 24)
                {
parse_errorCodes:
                    int value;
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                             input, &value)));
                    if (::TargetAgent::Protocol::MostSpy::MostSpyCommandErrorCodes_IsValid(value))
                    {
                        set_errorcodes(static_cast< ::TargetAgent::Protocol::MostSpy::MostSpyCommandErrorCodes >(value));
                    }
                    else
                    {
                        mutable_unknown_fields()->AddVarint(3, value);
                    }
                }
                else
                {
                    goto handle_unusual;
                }
                if (input->ExpectTag(34))
                    goto parse_versionInfo;
                break;
            }

            // optional .TargetAgent.Protocol.MostSpy.MostSpyVersionInfo versionInfo = 4;
        case 4:
            {
                if (tag == 34)
                {
parse_versionInfo:
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                            input, mutable_versioninfo()));
                }
                else
                {
                    goto handle_unusual;
                }
                if (input->ExpectTag(42))
                    goto parse_mostMessage;
                break;
            }

            // optional .TargetAgent.Protocol.MostSpy.MostSpyMostMessage mostMessage = 5;
        case 5:
            {
                if (tag == 42)
                {
parse_mostMessage:
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                            input, mutable_mostmessage()));
                }
                else
                {
                    goto handle_unusual;
                }
                if (input->ExpectAtEnd())
                    goto success;
                break;
            }

        default:
            {
handle_unusual:
                if (tag == 0 ||
                    ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
                    ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP)
                {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                        input, tag, mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage)
    return false;
#undef DO_
}

void MostSpyApplicationMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage)
    // required .TargetAgent.Protocol.MostSpy.MostSpyOpCodes messageID = 1;
    if (has_messageid())
    {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            1, this->messageid(), output);
    }

    // required .TargetAgent.Protocol.MostSpy.MostSpyOpType operationType = 2;
    if (has_operationtype())
    {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            2, this->operationtype(), output);
    }

    // optional .TargetAgent.Protocol.MostSpy.MostSpyCommandErrorCodes errorCodes = 3;
    if (has_errorcodes())
    {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            3, this->errorcodes(), output);
    }

    // optional .TargetAgent.Protocol.MostSpy.MostSpyVersionInfo versionInfo = 4;
    if (has_versioninfo())
    {
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, this->versioninfo(), output);
    }

    // optional .TargetAgent.Protocol.MostSpy.MostSpyMostMessage mostMessage = 5;
    if (has_mostmessage())
    {
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, this->mostmessage(), output);
    }

    if (!unknown_fields().empty())
    {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            unknown_fields(), output);
    }
    // @@protoc_insertion_point(serialize_end:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage)
}

::google::protobuf::uint8* MostSpyApplicationMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
    // @@protoc_insertion_point(serialize_to_array_start:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage)
    // required .TargetAgent.Protocol.MostSpy.MostSpyOpCodes messageID = 1;
    if (has_messageid())
    {
        target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
                     1, this->messageid(), target);
    }

    // required .TargetAgent.Protocol.MostSpy.MostSpyOpType operationType = 2;
    if (has_operationtype())
    {
        target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
                     2, this->operationtype(), target);
    }

    // optional .TargetAgent.Protocol.MostSpy.MostSpyCommandErrorCodes errorCodes = 3;
    if (has_errorcodes())
    {
        target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
                     3, this->errorcodes(), target);
    }

    // optional .TargetAgent.Protocol.MostSpy.MostSpyVersionInfo versionInfo = 4;
    if (has_versioninfo())
    {
        target = ::google::protobuf::internal::WireFormatLite::
                 WriteMessageNoVirtualToArray(
                     4, this->versioninfo(), target);
    }

    // optional .TargetAgent.Protocol.MostSpy.MostSpyMostMessage mostMessage = 5;
    if (has_mostmessage())
    {
        target = ::google::protobuf::internal::WireFormatLite::
                 WriteMessageNoVirtualToArray(
                     5, this->mostmessage(), target);
    }

    if (!unknown_fields().empty())
    {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
                     unknown_fields(), target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:TargetAgent.Protocol.MostSpy.MostSpyApplicationMessage)
    return target;
}

int MostSpyApplicationMessage::ByteSize() const {
    int total_size = 0;

    if (_has_bits_[0 / 32] & (0xffu << (0 % 32)))
    {
        // required .TargetAgent.Protocol.MostSpy.MostSpyOpCodes messageID = 1;
        if (has_messageid())
        {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::EnumSize(this->messageid());
        }

        // required .TargetAgent.Protocol.MostSpy.MostSpyOpType operationType = 2;
        if (has_operationtype())
        {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::EnumSize(this->operationtype());
        }

        // optional .TargetAgent.Protocol.MostSpy.MostSpyCommandErrorCodes errorCodes = 3;
        if (has_errorcodes())
        {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::EnumSize(this->errorcodes());
        }

        // optional .TargetAgent.Protocol.MostSpy.MostSpyVersionInfo versionInfo = 4;
        if (has_versioninfo())
        {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                              this->versioninfo());
        }

        // optional .TargetAgent.Protocol.MostSpy.MostSpyMostMessage mostMessage = 5;
        if (has_mostmessage())
        {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                              this->mostmessage());
        }

    }
    if (!unknown_fields().empty())
    {
        total_size +=
            ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
                unknown_fields());
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void MostSpyApplicationMessage::MergeFrom(const ::google::protobuf::Message& from) {
    GOOGLE_CHECK_NE(&from, this);
    const MostSpyApplicationMessage* source =
        ::google::protobuf::internal::dynamic_cast_if_available<const MostSpyApplicationMessage*>(
            &from);
    if (source == NULL)
    {
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    }
    else
    {
        MergeFrom(*source);
    }
}

void MostSpyApplicationMessage::MergeFrom(const MostSpyApplicationMessage& from) {
    GOOGLE_CHECK_NE(&from, this);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32)))
    {
        if (from.has_messageid())
        {
            set_messageid(from.messageid());
        }
        if (from.has_operationtype())
        {
            set_operationtype(from.operationtype());
        }
        if (from.has_errorcodes())
        {
            set_errorcodes(from.errorcodes());
        }
        if (from.has_versioninfo())
        {
            mutable_versioninfo()->::TargetAgent::Protocol::MostSpy::MostSpyVersionInfo::MergeFrom(from.versioninfo());
        }
        if (from.has_mostmessage())
        {
            mutable_mostmessage()->::TargetAgent::Protocol::MostSpy::MostSpyMostMessage::MergeFrom(from.mostmessage());
        }
    }
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MostSpyApplicationMessage::CopyFrom(const ::google::protobuf::Message& from) {
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

void MostSpyApplicationMessage::CopyFrom(const MostSpyApplicationMessage& from) {
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool MostSpyApplicationMessage::IsInitialized() const {
    if ((_has_bits_[0] & 0x00000003) != 0x00000003)
        return false;

    if (has_versioninfo())
    {
        if (!this->versioninfo().IsInitialized())
            return false;
    }
    if (has_mostmessage())
    {
        if (!this->mostmessage().IsInitialized())
            return false;
    }
    return true;
}

void MostSpyApplicationMessage::Swap(MostSpyApplicationMessage* other) {
    if (other != this)
    {
        std::swap(messageid_, other->messageid_);
        std::swap(operationtype_, other->operationtype_);
        std::swap(errorcodes_, other->errorcodes_);
        std::swap(versioninfo_, other->versioninfo_);
        std::swap(mostmessage_, other->mostmessage_);
        std::swap(_has_bits_[0], other->_has_bits_[0]);
        _unknown_fields_.Swap(&other->_unknown_fields_);
        std::swap(_cached_size_, other->_cached_size_);
    }
}

::google::protobuf::Metadata MostSpyApplicationMessage::GetMetadata() const {
    protobuf_AssignDescriptorsOnce();
    ::google::protobuf::Metadata metadata;
    metadata.descriptor = MostSpyApplicationMessage_descriptor_;
    metadata.reflection = MostSpyApplicationMessage_reflection_;
    return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MostSpyVersionInfo::kMajorVersionFieldNumber;
const int MostSpyVersionInfo::kMinorVersionFieldNumber;
#endif  // !_MSC_VER

MostSpyVersionInfo::MostSpyVersionInfo()
        : ::google::protobuf::Message() {
    SharedCtor();
    // @@protoc_insertion_point(constructor:TargetAgent.Protocol.MostSpy.MostSpyVersionInfo)
}

void MostSpyVersionInfo::InitAsDefaultInstance() {
}

MostSpyVersionInfo::MostSpyVersionInfo(const MostSpyVersionInfo& from)
        : ::google::protobuf::Message() {
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:TargetAgent.Protocol.MostSpy.MostSpyVersionInfo)
}

void MostSpyVersionInfo::SharedCtor() {
    _cached_size_ = 0;
    majorversion_ = 0;
    minorversion_ = 0;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MostSpyVersionInfo::~MostSpyVersionInfo() {
    // @@protoc_insertion_point(destructor:TargetAgent.Protocol.MostSpy.MostSpyVersionInfo)
    SharedDtor();
}

void MostSpyVersionInfo::SharedDtor() {
    if (this != default_instance_)
    {
    }
}

void MostSpyVersionInfo::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MostSpyVersionInfo::descriptor() {
    protobuf_AssignDescriptorsOnce();
    return MostSpyVersionInfo_descriptor_;
}

const MostSpyVersionInfo& MostSpyVersionInfo::default_instance() {
    if (default_instance_ == NULL)
        protobuf_AddDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto();
    return *default_instance_;
}

MostSpyVersionInfo* MostSpyVersionInfo::default_instance_ = NULL;

MostSpyVersionInfo* MostSpyVersionInfo::New() const {
    return new MostSpyVersionInfo;
}

void MostSpyVersionInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MostSpyVersionInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

    ZR_(majorversion_, minorversion_);

#undef OFFSET_OF_FIELD_
#undef ZR_

    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    mutable_unknown_fields()->Clear();
}

bool MostSpyVersionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:TargetAgent.Protocol.MostSpy.MostSpyVersionInfo)
    for (;;)
    {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag))
        {
            // required int32 majorVersion = 1;
        case 1:
            {
                if (tag == 8)
                {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                             input, &majorversion_)));
                    set_has_majorversion();
                }
                else
                {
                    goto handle_unusual;
                }
                if (input->ExpectTag(16))
                    goto parse_minorVersion;
                break;
            }

            // required int32 minorVersion = 2;
        case 2:
            {
                if (tag == 16)
                {
parse_minorVersion:
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                             input, &minorversion_)));
                    set_has_minorversion();
                }
                else
                {
                    goto handle_unusual;
                }
                if (input->ExpectAtEnd())
                    goto success;
                break;
            }

        default:
            {
handle_unusual:
                if (tag == 0 ||
                    ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
                    ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP)
                {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                        input, tag, mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:TargetAgent.Protocol.MostSpy.MostSpyVersionInfo)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:TargetAgent.Protocol.MostSpy.MostSpyVersionInfo)
    return false;
#undef DO_
}

void MostSpyVersionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:TargetAgent.Protocol.MostSpy.MostSpyVersionInfo)
    // required int32 majorVersion = 1;
    if (has_majorversion())
    {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->majorversion(), output);
    }

    // required int32 minorVersion = 2;
    if (has_minorversion())
    {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->minorversion(), output);
    }

    if (!unknown_fields().empty())
    {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            unknown_fields(), output);
    }
    // @@protoc_insertion_point(serialize_end:TargetAgent.Protocol.MostSpy.MostSpyVersionInfo)
}

::google::protobuf::uint8* MostSpyVersionInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
    // @@protoc_insertion_point(serialize_to_array_start:TargetAgent.Protocol.MostSpy.MostSpyVersionInfo)
    // required int32 majorVersion = 1;
    if (has_majorversion())
    {
        target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->majorversion(), target);
    }

    // required int32 minorVersion = 2;
    if (has_minorversion())
    {
        target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->minorversion(), target);
    }

    if (!unknown_fields().empty())
    {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
                     unknown_fields(), target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:TargetAgent.Protocol.MostSpy.MostSpyVersionInfo)
    return target;
}

int MostSpyVersionInfo::ByteSize() const {
    int total_size = 0;

    if (_has_bits_[0 / 32] & (0xffu << (0 % 32)))
    {
        // required int32 majorVersion = 1;
        if (has_majorversion())
        {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::Int32Size(
                              this->majorversion());
        }

        // required int32 minorVersion = 2;
        if (has_minorversion())
        {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::Int32Size(
                              this->minorversion());
        }

    }
    if (!unknown_fields().empty())
    {
        total_size +=
            ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
                unknown_fields());
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void MostSpyVersionInfo::MergeFrom(const ::google::protobuf::Message& from) {
    GOOGLE_CHECK_NE(&from, this);
    const MostSpyVersionInfo* source =
        ::google::protobuf::internal::dynamic_cast_if_available<const MostSpyVersionInfo*>(
            &from);
    if (source == NULL)
    {
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    }
    else
    {
        MergeFrom(*source);
    }
}

void MostSpyVersionInfo::MergeFrom(const MostSpyVersionInfo& from) {
    GOOGLE_CHECK_NE(&from, this);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32)))
    {
        if (from.has_majorversion())
        {
            set_majorversion(from.majorversion());
        }
        if (from.has_minorversion())
        {
            set_minorversion(from.minorversion());
        }
    }
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MostSpyVersionInfo::CopyFrom(const ::google::protobuf::Message& from) {
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

void MostSpyVersionInfo::CopyFrom(const MostSpyVersionInfo& from) {
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool MostSpyVersionInfo::IsInitialized() const {
    if ((_has_bits_[0] & 0x00000003) != 0x00000003)
        return false;

    return true;
}

void MostSpyVersionInfo::Swap(MostSpyVersionInfo* other) {
    if (other != this)
    {
        std::swap(majorversion_, other->majorversion_);
        std::swap(minorversion_, other->minorversion_);
        std::swap(_has_bits_[0], other->_has_bits_[0]);
        _unknown_fields_.Swap(&other->_unknown_fields_);
        std::swap(_cached_size_, other->_cached_size_);
    }
}

::google::protobuf::Metadata MostSpyVersionInfo::GetMetadata() const {
    protobuf_AssignDescriptorsOnce();
    ::google::protobuf::Metadata metadata;
    metadata.descriptor = MostSpyVersionInfo_descriptor_;
    metadata.reflection = MostSpyVersionInfo_reflection_;
    return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MostSpyMostMessage::kFBlockIDFieldNumber;
const int MostSpyMostMessage::kInstIDFieldNumber;
const int MostSpyMostMessage::kFktIDFieldNumber;
const int MostSpyMostMessage::kOPTypeFieldNumber;
const int MostSpyMostMessage::kPayloadFieldNumber;
const int MostSpyMostMessage::kTimestampFieldNumber;
#endif  // !_MSC_VER

MostSpyMostMessage::MostSpyMostMessage()
        : ::google::protobuf::Message() {
    SharedCtor();
    // @@protoc_insertion_point(constructor:TargetAgent.Protocol.MostSpy.MostSpyMostMessage)
}

void MostSpyMostMessage::InitAsDefaultInstance() {
}

MostSpyMostMessage::MostSpyMostMessage(const MostSpyMostMessage& from)
        : ::google::protobuf::Message() {
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:TargetAgent.Protocol.MostSpy.MostSpyMostMessage)
}

void MostSpyMostMessage::SharedCtor() {
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    fblockid_ = 0u;
    instid_ = 0u;
    fktid_ = 0u;
    optype_ = 0u;
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    timestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MostSpyMostMessage::~MostSpyMostMessage() {
    // @@protoc_insertion_point(destructor:TargetAgent.Protocol.MostSpy.MostSpyMostMessage)
    SharedDtor();
}

void MostSpyMostMessage::SharedDtor() {
    if (payload_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        delete payload_;
    }
    if (timestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited())
    {
        delete timestamp_;
    }
    if (this != default_instance_)
    {
    }
}

void MostSpyMostMessage::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MostSpyMostMessage::descriptor() {
    protobuf_AssignDescriptorsOnce();
    return MostSpyMostMessage_descriptor_;
}

const MostSpyMostMessage& MostSpyMostMessage::default_instance() {
    if (default_instance_ == NULL)
        protobuf_AddDesc_target_5fagent_5fprot_5fmost_5fspy_2eproto();
    return *default_instance_;
}

MostSpyMostMessage* MostSpyMostMessage::default_instance_ = NULL;

MostSpyMostMessage* MostSpyMostMessage::New() const {
    return new MostSpyMostMessage;
}

void MostSpyMostMessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MostSpyMostMessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

    if (_has_bits_[0 / 32] & 63)
    {
        ZR_(fblockid_, optype_);
        if (has_payload())
        {
            if (payload_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited())
            {
                payload_->clear();
            }
        }
        if (has_timestamp())
        {
            if (timestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited())
            {
                timestamp_->clear();
            }
        }
    }

#undef OFFSET_OF_FIELD_
#undef ZR_

    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    mutable_unknown_fields()->Clear();
}

bool MostSpyMostMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:TargetAgent.Protocol.MostSpy.MostSpyMostMessage)
    for (;;)
    {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag))
        {
            // required uint32 FBlockID = 1;
        case 1:
            {
                if (tag == 8)
                {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                             input, &fblockid_)));
                    set_has_fblockid();
                }
                else
                {
                    goto handle_unusual;
                }
                if (input->ExpectTag(16))
                    goto parse_InstID;
                break;
            }

            // required uint32 InstID = 2;
        case 2:
            {
                if (tag == 16)
                {
parse_InstID:
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                             input, &instid_)));
                    set_has_instid();
                }
                else
                {
                    goto handle_unusual;
                }
                if (input->ExpectTag(24))
                    goto parse_FktID;
                break;
            }

            // required uint32 FktID = 3;
        case 3:
            {
                if (tag == 24)
                {
parse_FktID:
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                             input, &fktid_)));
                    set_has_fktid();
                }
                else
                {
                    goto handle_unusual;
                }
                if (input->ExpectTag(32))
                    goto parse_OPType;
                break;
            }

            // required uint32 OPType = 4;
        case 4:
            {
                if (tag == 32)
                {
parse_OPType:
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                             input, &optype_)));
                    set_has_optype();
                }
                else
                {
                    goto handle_unusual;
                }
                if (input->ExpectTag(42))
                    goto parse_payload;
                break;
            }

            // required string payload = 5;
        case 5:
            {
                if (tag == 42)
                {
parse_payload:
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                            input, this->mutable_payload()));
                    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
                        this->payload().data(), this->payload().length(),
                        ::google::protobuf::internal::WireFormat::PARSE,
                        "payload");
                }
                else
                {
                    goto handle_unusual;
                }
                if (input->ExpectTag(50))
                    goto parse_timestamp;
                break;
            }

            // optional string timestamp = 6;
        case 6:
            {
                if (tag == 50)
                {
parse_timestamp:
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                            input, this->mutable_timestamp()));
                    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
                        this->timestamp().data(), this->timestamp().length(),
                        ::google::protobuf::internal::WireFormat::PARSE,
                        "timestamp");
                }
                else
                {
                    goto handle_unusual;
                }
                if (input->ExpectAtEnd())
                    goto success;
                break;
            }

        default:
            {
handle_unusual:
                if (tag == 0 ||
                    ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
                    ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP)
                {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                        input, tag, mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:TargetAgent.Protocol.MostSpy.MostSpyMostMessage)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:TargetAgent.Protocol.MostSpy.MostSpyMostMessage)
    return false;
#undef DO_
}

void MostSpyMostMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:TargetAgent.Protocol.MostSpy.MostSpyMostMessage)
    // required uint32 FBlockID = 1;
    if (has_fblockid())
    {
        ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fblockid(), output);
    }

    // required uint32 InstID = 2;
    if (has_instid())
    {
        ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->instid(), output);
    }

    // required uint32 FktID = 3;
    if (has_fktid())
    {
        ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->fktid(), output);
    }

    // required uint32 OPType = 4;
    if (has_optype())
    {
        ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->optype(), output);
    }

    // required string payload = 5;
    if (has_payload())
    {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->payload().data(), this->payload().length(),
            ::google::protobuf::internal::WireFormat::SERIALIZE,
            "payload");
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            5, this->payload(), output);
    }

    // optional string timestamp = 6;
    if (has_timestamp())
    {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->timestamp().data(), this->timestamp().length(),
            ::google::protobuf::internal::WireFormat::SERIALIZE,
            "timestamp");
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            6, this->timestamp(), output);
    }

    if (!unknown_fields().empty())
    {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            unknown_fields(), output);
    }
    // @@protoc_insertion_point(serialize_end:TargetAgent.Protocol.MostSpy.MostSpyMostMessage)
}

::google::protobuf::uint8* MostSpyMostMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
    // @@protoc_insertion_point(serialize_to_array_start:TargetAgent.Protocol.MostSpy.MostSpyMostMessage)
    // required uint32 FBlockID = 1;
    if (has_fblockid())
    {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fblockid(), target);
    }

    // required uint32 InstID = 2;
    if (has_instid())
    {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->instid(), target);
    }

    // required uint32 FktID = 3;
    if (has_fktid())
    {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->fktid(), target);
    }

    // required uint32 OPType = 4;
    if (has_optype())
    {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->optype(), target);
    }

    // required string payload = 5;
    if (has_payload())
    {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->payload().data(), this->payload().length(),
            ::google::protobuf::internal::WireFormat::SERIALIZE,
            "payload");
        target =
            ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
                5, this->payload(), target);
    }

    // optional string timestamp = 6;
    if (has_timestamp())
    {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->timestamp().data(), this->timestamp().length(),
            ::google::protobuf::internal::WireFormat::SERIALIZE,
            "timestamp");
        target =
            ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
                6, this->timestamp(), target);
    }

    if (!unknown_fields().empty())
    {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
                     unknown_fields(), target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:TargetAgent.Protocol.MostSpy.MostSpyMostMessage)
    return target;
}

int MostSpyMostMessage::ByteSize() const {
    int total_size = 0;

    if (_has_bits_[0 / 32] & (0xffu << (0 % 32)))
    {
        // required uint32 FBlockID = 1;
        if (has_fblockid())
        {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::UInt32Size(
                              this->fblockid());
        }

        // required uint32 InstID = 2;
        if (has_instid())
        {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::UInt32Size(
                              this->instid());
        }

        // required uint32 FktID = 3;
        if (has_fktid())
        {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::UInt32Size(
                              this->fktid());
        }

        // required uint32 OPType = 4;
        if (has_optype())
        {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::UInt32Size(
                              this->optype());
        }

        // required string payload = 5;
        if (has_payload())
        {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::StringSize(
                              this->payload());
        }

        // optional string timestamp = 6;
        if (has_timestamp())
        {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::StringSize(
                              this->timestamp());
        }

    }
    if (!unknown_fields().empty())
    {
        total_size +=
            ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
                unknown_fields());
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void MostSpyMostMessage::MergeFrom(const ::google::protobuf::Message& from) {
    GOOGLE_CHECK_NE(&from, this);
    const MostSpyMostMessage* source =
        ::google::protobuf::internal::dynamic_cast_if_available<const MostSpyMostMessage*>(
            &from);
    if (source == NULL)
    {
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    }
    else
    {
        MergeFrom(*source);
    }
}

void MostSpyMostMessage::MergeFrom(const MostSpyMostMessage& from) {
    GOOGLE_CHECK_NE(&from, this);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32)))
    {
        if (from.has_fblockid())
        {
            set_fblockid(from.fblockid());
        }
        if (from.has_instid())
        {
            set_instid(from.instid());
        }
        if (from.has_fktid())
        {
            set_fktid(from.fktid());
        }
        if (from.has_optype())
        {
            set_optype(from.optype());
        }
        if (from.has_payload())
        {
            set_payload(from.payload());
        }
        if (from.has_timestamp())
        {
            set_timestamp(from.timestamp());
        }
    }
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MostSpyMostMessage::CopyFrom(const ::google::protobuf::Message& from) {
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

void MostSpyMostMessage::CopyFrom(const MostSpyMostMessage& from) {
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool MostSpyMostMessage::IsInitialized() const {
    if ((_has_bits_[0] & 0x0000001f) != 0x0000001f)
        return false;

    return true;
}

void MostSpyMostMessage::Swap(MostSpyMostMessage* other) {
    if (other != this)
    {
        std::swap(fblockid_, other->fblockid_);
        std::swap(instid_, other->instid_);
        std::swap(fktid_, other->fktid_);
        std::swap(optype_, other->optype_);
        std::swap(payload_, other->payload_);
        std::swap(timestamp_, other->timestamp_);
        std::swap(_has_bits_[0], other->_has_bits_[0]);
        _unknown_fields_.Swap(&other->_unknown_fields_);
        std::swap(_cached_size_, other->_cached_size_);
    }
}

::google::protobuf::Metadata MostSpyMostMessage::GetMetadata() const {
    protobuf_AssignDescriptorsOnce();
    ::google::protobuf::Metadata metadata;
    metadata.descriptor = MostSpyMostMessage_descriptor_;
    metadata.reflection = MostSpyMostMessage_reflection_;
    return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MostSpy
}  // namespace Protocol
}  // namespace TargetAgent

// @@protoc_insertion_point(global_scope)
